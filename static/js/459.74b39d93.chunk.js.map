{"version":3,"file":"static/js/459.74b39d93.chunk.js","mappings":"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","sources":["components/api.ts","components/utils.ts","components/banner/Banner.tsx","components/slider/Slider.tsx","pages/Home.tsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst BASE_PATH = \"https://api.themoviedb.org/3\";\r\nconst API_KEY = \"fb0dde4eb75a49cb4fb7577c2dbf459a\";\r\n\r\nexport function getNowPlaying() {\r\n  return (\r\n    axios\r\n      .get(`${BASE_PATH}/movie/now_playing`, {\r\n        params: {\r\n          api_key: API_KEY,\r\n        }\r\n      })\r\n      .then((res) => res.data)\r\n  );\r\n}\r\n","export function makeImagePath(path: string, format?: string) {\r\n  return `https://image.tmdb.org/t/p/${format ? format : \"original\" }${path}`\r\n}","import styled from \"styled-components\";\r\nimport { makeImagePath } from \"../utils\";\r\nimport { IResult } from \"../interfaces\";\r\n\r\nconst Wrapper = styled.div<{ bgimg: string }>`\r\n  width: 100%;\r\n  height: 50vw;\r\n  background-image: linear-gradient(rgba(20, 20, 20, 0), rgba(20, 20, 20, 1)), url(${(props) => props.bgimg});\r\n  background-size: cover;\r\n  background-position: 0% 33%;\r\n  padding: 150px 60px;\r\n  cursor: default;\r\n  user-select: none;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  width: 50%;\r\n  font-size: 8vw;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  width: 36%;\r\n  font-size: 1.4vw;\r\n  font-weight: 400;\r\n  letter-spacing: 0.07rem;\r\n`;\r\n\r\nfunction Banner({ data }: { data: IResult }) {\r\n  const imagePath = makeImagePath(data.backdrop_path ? data.backdrop_path : data.poster_path);\r\n  const title = data.title;\r\n  const overview = data.overview;\r\n\r\n  return (\r\n    <Wrapper\r\n      bgimg={imagePath}\r\n    >\r\n      <Title>{title}</Title>\r\n      <Overview>{overview}</Overview>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { makeImagePath } from \"../utils\";\r\nimport { IResult, ISlider } from \"../interfaces\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  position: relative;\r\n  top: -5vw;\r\n`;\r\n\r\nconst PrevBtn = styled.button`\r\n  position: relative;\r\n`;\r\n\r\nconst NextBtn = styled.button`\r\n  position: relative;\r\n`;\r\n\r\nconst Row = styled(motion.div)`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 1vw;\r\n  position: absolute;\r\n`;\r\n\r\nconst rowVariants = {\r\n  left: {\r\n    x: -window.innerWidth\r\n  },\r\n  center: {\r\n    x: 0,\r\n  },\r\n  right: {\r\n    x: window.innerWidth,\r\n  },\r\n};\r\n\r\nconst Box = styled(motion.div)<{ bgimg: string }>`\r\n  width: 15vw;\r\n  height: 9vw;\r\n  background-color: ${(props) => props.theme.black.default};\r\n  background-size: cover;\r\n  background-position: 0% 33%;\r\n  background-image: url(${(props) => props.bgimg});\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst boxVariants = {\r\n  onHover: {\r\n    scale: 1.3,\r\n    borderRadius: 0,\r\n    transition: {\r\n      delay: 0.4,\r\n      duaration: 0,\r\n    },\r\n  },\r\n};\r\n\r\nconst Info = styled(motion.div)`\r\n  background-color: ${(props) => props.theme.black.default};\r\n  width: 100%;\r\n  height: 2vw;\r\n  opacity: 0;\r\n  position: absolute;\r\n  bottom: -2vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  h4 {\r\n    text-align: center;\r\n    font-size: 1.4vw;\r\n  }\r\n`;\r\n\r\nconst infoVariants = {\r\n  onHover: {\r\n    opacity: 1,\r\n    zIndex: 1,\r\n    transition: {\r\n      delay: 0.4,\r\n      duaration: 0,\r\n      type: \"tween\",\r\n    },\r\n  },\r\n};\r\n\r\nfunction Slider({ data, offset }: { data: IResult[], offset: number }) {\r\n  const [index, setIndex] = useState(0);\r\n  const [isLeaving, setIsLeaving] = useState(false);\r\n  const [contents, setContents] = useState<ISlider[]>();\r\n\r\n  useEffect(() => {\r\n    const contentsTemp: ISlider[] = [];\r\n    data.map((v) => {\r\n      contentsTemp.push({\r\n        id: v.id,\r\n        imagePath: makeImagePath(v.backdrop_path ? v.backdrop_path : v.poster_path, \"w500\"),\r\n        title: v.title,\r\n        overview: v.overview,\r\n      });\r\n      return;\r\n    });\r\n    setContents(contentsTemp);\r\n  }, [data]);\r\n  \r\n  const prevIndex = () => {\r\n    if (contents) {\r\n      if (isLeaving) return;\r\n    }\r\n  };\r\n  \r\n  const nextIndex = () => {\r\n    if (contents) {\r\n      if (isLeaving) return;\r\n      setIsLeaving(true);\r\n      const maxIndex = Math.floor(contents.length / offset) - 1;\r\n      setIndex((v) => (v === maxIndex ? 0 : v + 1));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <PrevBtn onClick={prevIndex}>Prev</PrevBtn>\r\n      <AnimatePresence initial={false} onExitComplete={() => setIsLeaving(false)}>\r\n        <Row\r\n          key={index}\r\n          variants={rowVariants}\r\n          initial=\"right\"\r\n          animate=\"center\"\r\n          exit=\"left\"\r\n          transition={{ type: \"tween\", duration: 1 }}\r\n        >\r\n          {contents?.slice(index * offset, (index + 1) * offset).map((v, i) => {\r\n            return (\r\n              <Box\r\n                key={v.id}\r\n                variants={boxVariants}\r\n                whileHover=\"onHover\"\r\n                transition={{ type: \"tween\" }}\r\n                bgimg={v.imagePath}\r\n                style={{ originX: (i === 0 ? 0 : (i === offset - 1 ? 1 : 0.5)), originY: 1, }}\r\n              >\r\n                <Info\r\n                  variants={infoVariants}\r\n                  transition={{ type: \"tween\", duration: 0 }}\r\n                >\r\n                  <h4>{v.title}</h4>\r\n                </Info>\r\n              </Box>\r\n            );\r\n          })}\r\n        </Row>\r\n      </AnimatePresence>\r\n      <NextBtn onClick={nextIndex}>Next</NextBtn>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Slider;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport styled from \"styled-components\";\r\nimport { getNowPlaying } from \"../components/api\";\r\nimport { INowPlaying, IResult } from \"../components/interfaces\";\r\nimport Loader from \"../components/loader/Loader\";\r\nimport Banner from \"../components/banner/Banner\";\r\nimport Slider from \"../components/slider/Slider\";\r\n\r\nconst Wrapper = styled.div`\r\n  background-color: ${(props) => props.theme.black.darker};\r\n  height: 200vh;\r\n`;\r\n\r\nfunction Home() {\r\n  const { data: nowPlaying } = useQuery<INowPlaying>([\"movies\", \"nowPlaying\"], getNowPlaying);\r\n  const [dataBanner, setDataBanner] = useState<IResult>();\r\n  const [dataSlider, setDataSlider] = useState<IResult[]>();\r\n  const offset = 6;\r\n\r\n  useEffect(() => {\r\n    if (nowPlaying) {\r\n      setDataBanner(nowPlaying.results[0]);\r\n      setDataSlider(nowPlaying.results.slice(1));\r\n    }\r\n  }, [nowPlaying]);\r\n\r\n  return (\r\n    <>\r\n      {dataBanner && dataSlider ? (\r\n        <Wrapper>\r\n          <Banner data={dataBanner} />\r\n          <Slider data={dataSlider} offset={offset} />\r\n        </Wrapper>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"names":["getNowPlaying","axios","params","api_key","then","res","data","makeImagePath","path","format","Wrapper","styled","props","bgimg","Title","Overview","imagePath","backdrop_path","poster_path","title","overview","PrevBtn","NextBtn","Row","motion","rowVariants","left","x","window","innerWidth","center","right","Box","theme","black","default","boxVariants","onHover","scale","borderRadius","transition","delay","duaration","Info","infoVariants","opacity","zIndex","type","offset","useState","index","setIndex","isLeaving","setIsLeaving","contents","setContents","useEffect","contentsTemp","map","v","push","id","onClick","AnimatePresence","initial","onExitComplete","variants","animate","exit","duration","slice","i","whileHover","style","originX","originY","maxIndex","Math","floor","length","darker","nowPlaying","useQuery","dataBanner","setDataBanner","dataSlider","setDataSlider","results","Loader"],"sourceRoot":""}