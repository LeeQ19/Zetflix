{"version":3,"file":"static/js/604.59923195.chunk.js","mappings":"sOAKO,SAASA,IACd,OACEC,IAAAA,IAAA,UALc,+BAKd,sBACyC,CACrCC,OAAQ,CACNC,QAPM,sCAUTC,MAAK,SAACC,GAAD,OAASA,EAAIC,Q,cCblB,SAASC,EAAcC,EAAcC,GAC1C,MAAM,8BAAN,OAAqCA,GAAkB,WAAvD,YAAsED,G,uCCQlEE,EAAUC,EAAAA,GAAAA,IAAH,oEACS,SAACC,GAAD,OAAWA,EAAMC,MAAMC,MAAMC,UAI7CC,EAASL,EAAAA,GAAAA,IAAH,sRAG6E,SAACC,GAAD,OAAWA,EAAMK,WAQpGC,EAAQP,EAAAA,GAAAA,GAAH,mFAMLQ,EAAWR,EAAAA,GAAAA,EAAH,6GAORS,EAAST,EAAAA,GAAAA,IAAH,8DAKNU,GAAMV,EAAAA,EAAAA,IAAOW,EAAAA,EAAAA,IAAPX,CAAH,0HAQHY,EAAc,CAClBC,KAAM,CACJC,GAAIC,OAAOC,WAAa,GAE1BC,OAAQ,CACNH,EAAG,GAELI,MAAO,CACLJ,EAAGC,OAAOC,WAAa,IAIrBG,GAAMnB,EAAAA,EAAAA,IAAOW,EAAAA,EAAAA,IAAPX,CAAH,sMAGiB,SAACC,GAAD,OAAWA,EAAMK,WAOrCc,EAAc,CAClBC,QAAS,CACPC,MAAO,IACPC,aAAc,EACdC,WAAY,CACVC,MAAO,GACPC,UAAW,KAKXC,GAAO3B,EAAAA,EAAAA,IAAOW,EAAAA,EAAAA,IAAPX,CAAH,4QACY,SAACC,GAAD,OAAWA,EAAMC,MAAMC,MAAMyB,WAe7CC,EAAe,CACnBR,QAAS,CACPS,QAAS,EACTC,OAAQ,EACRP,WAAY,CACVC,MAAO,GACPC,UAAW,EACXM,KAAM,WAuEZ,MAlEA,WACE,IAAcC,GAAeC,EAAAA,EAAAA,UAAsB,CAAC,SAAU,cAAe7C,GAArEM,KACR,GAA0BwC,EAAAA,EAAAA,UAAS,GAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAYA,OACE,SAACxC,EAAD,UACGkC,GACC,iCACE,UAAC5B,EAAD,CACEmC,QAAS,kBAdD,SAACC,EAAgBC,GACjC,GAAID,EAAM,CACR,GAAIH,EAAW,OACfC,GAAa,GACb,IAAMI,EAAWC,KAAKC,OAAOJ,EAAKK,OAAS,GAAKJ,GAAU,EAC1DL,GAAS,SAACU,GAAD,OAAQA,IAAMJ,EAAW,EAAII,EAAI,MASrBC,CAAUf,EAAWgB,QAhB/B,IAiBL3C,QAASV,EAAcqC,EAAWgB,QAAQ,GAAGC,aAF/C,WAIE,SAAC3C,EAAD,UAAQ0B,EAAWgB,QAAQ,GAAGE,SAC9B,SAAC3C,EAAD,UAAWyB,EAAWgB,QAAQ,GAAGG,eAEnC,SAAC3C,EAAD,WACE,SAAC4C,EAAA,EAAD,CAAiBC,SAAS,EAAOC,eAAgB,kBAAMhB,GAAa,IAApE,UACE,SAAC7B,EAAD,CAEE8C,SAAU5C,EACV0C,QAAQ,QACRG,QAAQ,SACRC,KAAK,OACLlC,WAAY,CAAEQ,KAAM,QAAS2B,SAAU,GANzC,SAQG1B,EAAWgB,QAAQW,MAAM,GACvBA,MAjCF,EAiCQxB,EAjCR,EAiCwBA,EAjCxB,GAkCEyB,KAAI,SAACd,EAAGe,GAAJ,OACH,SAAC3C,EAAD,CAEEqC,SAAUpC,EACV2C,WAAW,UACXvC,WAAY,CAAEQ,KAAM,SACpB1B,QAASV,EAAcmD,EAAEiB,cAAe,QACxCC,MAAO,CAAEC,QAAgB,IAANJ,EAAU,EAAWpB,IAANoB,EAAmB,EAAI,GAAOK,QAAS,GAN3E,UAQE,SAACxC,EAAD,CACE6B,SAAU3B,EACVL,WAAY,CAAEQ,KAAM,QAAS2B,SAAU,GAFzC,UAIE,wBAAKZ,EAAEI,WAXJJ,EAAEqB,QAXRhC,WA+BX,SAACiC,EAAA,EAAD","sources":["components/api.ts","components/utils.ts","pages/Home.tsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst BASE_PATH = \"https://api.themoviedb.org/3\";\r\nconst API_KEY = \"fb0dde4eb75a49cb4fb7577c2dbf459a\";\r\n\r\nexport function getNowPlaying() {\r\n  return (\r\n    axios\r\n      .get(`${BASE_PATH}/movie/now_playing`, {\r\n        params: {\r\n          api_key: API_KEY,\r\n        }\r\n      })\r\n      .then((res) => res.data)\r\n  );\r\n}\r\n","export function makeImagePath(path: string, format?: string) {\r\n  return `https://image.tmdb.org/t/p/${format ? format : \"original\" }/${path}`\r\n}","import { useQuery } from \"react-query\";\r\nimport styled from \"styled-components\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { getNowPlaying } from \"../components/api\";\r\nimport { INowPlaying, Result } from \"../components/interfaces\";\r\nimport Loader from \"../components/Loader\";\r\nimport { makeImagePath } from \"../components/utils\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Wrapper = styled.div`\r\n  background-color: ${(props) => props.theme.black.darker};\r\n  height: 200vh;\r\n`;\r\n\r\nconst Banner = styled.div<{ bgPhoto: string }>`\r\n  width: 100%\r\n  height: 56.25vw;\r\n  background-image: linear-gradient(rgba(20, 20, 20, 0) 60%, rgba(20, 20, 20, 1)), url(${(props) => props.bgPhoto});\r\n  background-size: cover;\r\n  background-position: 0% 20%;\r\n  padding: 150px 60px;\r\n  cursor: default;\r\n  user-select: none;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  width: 65%;\r\n  font-size: 10vw;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  width: 36%;\r\n  font-size: 1.4vw;\r\n  font-weight: 400;\r\n  letter-spacing: 0.07rem;\r\n`;\r\n\r\nconst Slider = styled.div`\r\n  position: relative;\r\n  top: -10vh;\r\n`;\r\n\r\nconst Row = styled(motion.div)`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 1vw;\r\n  position: absolute;\r\n  width: 100%;\r\n`;\r\n\r\nconst rowVariants = {\r\n  left: {\r\n    x: -window.innerWidth - 5,\r\n  },\r\n  center: {\r\n    x: 0,\r\n  },\r\n  right: {\r\n    x: window.innerWidth + 5,\r\n  },\r\n};\r\n\r\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\r\n  width: 15vw;\r\n  height: 9.3vw;\r\n  background-image: url(${(props) => props.bgPhoto});\r\n  background-size: cover;\r\n  background-position: center center;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst boxVariants = {\r\n  onHover: {\r\n    scale: 1.3,\r\n    borderRadius: 0,\r\n    transition: {\r\n      delay: 0.4,\r\n      duaration: 0,\r\n    },\r\n  },\r\n};\r\n\r\nconst Info = styled(motion.div)`\r\n  background-color: ${(props) => props.theme.black.default};\r\n  width: 100%;\r\n  height: 2vw;\r\n  opacity: 0;\r\n  position: absolute;\r\n  bottom: -2vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  h4 {\r\n    text-align: center;\r\n    font-size: 1.4vw;\r\n  }\r\n`;\r\n\r\nconst infoVariants = {\r\n  onHover: {\r\n    opacity: 1,\r\n    zIndex: 1,\r\n    transition: {\r\n      delay: 0.4,\r\n      duaration: 0,\r\n      type: \"tween\",\r\n    },\r\n  },\r\n};\r\n\r\nfunction Home() {\r\n  const { data: nowPlaying } = useQuery<INowPlaying>([\"movies\", \"nowPlaying\"], getNowPlaying);\r\n  const [index, setIndex] = useState(0);\r\n  const [isLeaving, setIsLeaving] = useState(false);\r\n  const offset = 6;\r\n\r\n  const nextIndex = (list: Result[], offset: number) => {\r\n    if (list) {\r\n      if (isLeaving) return;\r\n      setIsLeaving(true);\r\n      const maxIndex = Math.floor((list.length - 1) / offset) - 1;\r\n      setIndex((v) => (v === maxIndex ? 0 : v + 1));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      {nowPlaying ? (\r\n        <>\r\n          <Banner\r\n            onClick={() => nextIndex(nowPlaying.results, offset)}\r\n            bgPhoto={makeImagePath(nowPlaying.results[0].poster_path)}\r\n          >\r\n            <Title>{nowPlaying.results[0].title}</Title>\r\n            <Overview>{nowPlaying.results[0].overview}</Overview>\r\n          </Banner>\r\n          <Slider>\r\n            <AnimatePresence initial={false} onExitComplete={() => setIsLeaving(false)}>\r\n              <Row\r\n                key={index}\r\n                variants={rowVariants}\r\n                initial=\"right\"\r\n                animate=\"center\"\r\n                exit=\"left\"\r\n                transition={{ type: \"tween\", duration: 1 }}\r\n              >\r\n                {nowPlaying.results.slice(1)\r\n                  .slice(index * offset, index * offset + offset)\r\n                  .map((v, i) => (\r\n                    <Box\r\n                      key={v.id}\r\n                      variants={boxVariants}\r\n                      whileHover=\"onHover\"\r\n                      transition={{ type: \"tween\", }}\r\n                      bgPhoto={makeImagePath(v.backdrop_path, \"w500\")}\r\n                      style={{ originX: (i === 0 ? 0 : (i === offset - 1 ? 1 : 0.5)), originY: 1, }}\r\n                    >\r\n                      <Info\r\n                        variants={infoVariants}\r\n                        transition={{ type: \"tween\", duration: 0 }}\r\n                      >\r\n                        <h4>{v.title}</h4>\r\n                      </Info>\r\n                    </Box>\r\n                  ))}\r\n              </Row>\r\n            </AnimatePresence>\r\n          </Slider>\r\n        </>\r\n      ) : (\r\n          <Loader />\r\n      )}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"names":["getNowPlaying","axios","params","api_key","then","res","data","makeImagePath","path","format","Wrapper","styled","props","theme","black","darker","Banner","bgPhoto","Title","Overview","Slider","Row","motion","rowVariants","left","x","window","innerWidth","center","right","Box","boxVariants","onHover","scale","borderRadius","transition","delay","duaration","Info","default","infoVariants","opacity","zIndex","type","nowPlaying","useQuery","useState","index","setIndex","isLeaving","setIsLeaving","onClick","list","offset","maxIndex","Math","floor","length","v","nextIndex","results","poster_path","title","overview","AnimatePresence","initial","onExitComplete","variants","animate","exit","duration","slice","map","i","whileHover","backdrop_path","style","originX","originY","id","Loader"],"sourceRoot":""}